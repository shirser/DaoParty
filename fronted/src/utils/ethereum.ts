import { ethers } from "ethers";

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ RPC Amoy Testnet
const rpcUrl = "https://rpc-amoy.polygon.technology";
const provider = new ethers.JsonRpcProvider(rpcUrl);

console.log("üåç –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —Å–µ—Ç–∏:", rpcUrl);

async function connectWallet() {
  if (typeof window === "undefined" || !window.ethereum) {
    alert("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ MetaMask!");
    return null;
  }

  try {
    const browserProvider = new ethers.BrowserProvider(window.ethereum);
    await browserProvider.send("eth_requestAccounts", []); // –ó–∞–ø—Ä–æ—Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    const signer = await browserProvider.getSigner(); // –ü–æ–ª—É—á–∞–µ–º signer –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ
    const address = await signer.getAddress(); // –¢–µ–ø–µ—Ä—å getAddress() –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å

    console.log("‚úÖ –ö–æ—à–µ–ª–µ–∫ –ø–æ–¥–∫–ª—é—á–µ–Ω:", address);
    return { address, signer };
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫–æ—à–µ–ª—å–∫–∞:", error);
    return null;
  }
}

export { provider, connectWallet };
